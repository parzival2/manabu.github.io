<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>beaglebone on blog</title>
    <link>https://parzival2.github.io/blog/tags/beaglebone/</link>
    <description>Recent content in beaglebone on blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 27 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://parzival2.github.io/blog/tags/beaglebone/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cross-compiler using crosstool-ng for Beaglebone</title>
      <link>https://parzival2.github.io/blog/posts/crosstool-ng-beaglebone/</link>
      <pubDate>Tue, 27 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://parzival2.github.io/blog/posts/crosstool-ng-beaglebone/</guid>
      <description>Cross-compiler using crosstool-ng for Beaglebone In the previous post, I have used an already available cross-compiling compiler to cross-compile a C++ project for Beaglebone. I want to learn how I can do that so that I can utilize the learned knowledge if the need arises. I came to know that we can build a compiler using a tool called crosstool-ng. I am going to use it to build a compiler that can be used to cross-compile C and C++ applications for Beaglebone.</description>
    </item>
    
    <item>
      <title>Cross compile C&#43;&#43; project for beaglebone</title>
      <link>https://parzival2.github.io/blog/posts/beaglebone-cross-compile/</link>
      <pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://parzival2.github.io/blog/posts/beaglebone-cross-compile/</guid>
      <description>Cross compiling a C++ project for Beaglebone I am thinking of getting into Embedded Linux, so I have ordered a Beaglebone. I don&amp;rsquo;t want to use Python to program it as I want to do some real-time processing with it. For that, I have to figure out how to compile C++ programs on the host PC instead of doing it on the Beaglebone as it has very little ram.
Initially, I wanted to do the cross-compilation using QEMU but quickly gave up the idea as there is no out-of-the-box QEMU system for Beaglebone.</description>
    </item>
    
    <item>
      <title>Sharing internet connection with Beaglebone</title>
      <link>https://parzival2.github.io/blog/posts/beaglebone-internet/</link>
      <pubDate>Tue, 30 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://parzival2.github.io/blog/posts/beaglebone-internet/</guid>
      <description>Sharing internet connection with Beaglebone The beaglebone can be connected over serial and the fun part is that the usb post emulates the lan connection. So we don&amp;rsquo;t need to have another lan connection to ssh into the board.
The present versions the debian seems to recognize the SD card and boot from the SD Card directly. The instructions seem to suggest that we should hold the USERBUTTON while providing power in-order to boot from SD Card.</description>
    </item>
    
  </channel>
</rss>
